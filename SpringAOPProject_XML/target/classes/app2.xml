<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<bean id="dao" class="com.sist.dao.MyDAO2"/>
	<!-- aop 생성 -->
	<!-- 
		자동 호출이 가능
		1. 언제 어디서 호출할 지 여부 확인
		= 시점 => 어떤 클래스의 메소드에 적용
		         PointCut
		= 호출 위치 지정 => JoinPoint
		  before
		  after
		  after-returning
		  after-throwing
		  around
		  
		  public String display(){
		  	before => 호출
		  	try{
		  		around => 작업 시간 , 트랜잭션 확인용으로 주로 사용
		  		============
		  		핵심 코딩
		  		============
		  		around
		  	}
		  	catch(Exception e){
		  		after-throwing
		  	}
		  	finally{
		  		after
		  	}
		  	return ""; => after-returning
		  }
		  
		  * com.sist.dao.MyDAO@.*(..)
		  =                     = === 매개변수가 0이상
		  return형              모든 메소드 적용
	 -->
	 <bean id="aspect" class="com.sist.aop.DBAspect"/>
	 <aop:config>
	 	<aop:aspect ref="aspect"><!-- 공통으로 사용되는 클래스 -->
	 		<!-- 시작과 동시에 호출되는 메소드 -->
	 		<aop:before method="getConection"
	 			pointcut="execution(* com.sist.dao.MyDAO2.*(..))"
	 		/><!-- 어떤 메소드가 동작할 때 실행할 지 -->
	 		<!-- finally 무조건 수행 -->
	 		<aop:after method="disConnection"
	 			pointcut="execution(* com.sist.dao.MyDAO2.*(..))"
	 		/>
	 	</aop:aspect>
	 </aop:config>
</beans>
