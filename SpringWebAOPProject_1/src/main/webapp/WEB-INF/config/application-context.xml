<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- AOP설정  -->
	<aop:aspectj-autoproxy/>
	<!-- 사용자 정의 클래스 등록  -->
	<context:component-scan base-package="com.sist.*"/>
	<!-- 
		@Component, 
		@Repository, 
		@Service,
		@Controller,  일반 파일명 지정
		@RestController, 자바 스크립트 지정 
	 	@ControllerAdvice, 
	 	@Configuration
	 	선택적 메모리 할당
	 -->
	<!-- 
		MVC 동작
		1. 사용자 요청 => .do
		2. .do가 서버로 전송
			DispatcherServlet이 요청을 받는다.
		3. DispatcherServlet에서 HandlerMapping호출
		                       ===============
		                       | Model 클래스를 찾아서
		                       	 @RequestMapping의 메소드 호출
		                       	 
		4. request => DispatcherServlet이 받는다.
		5. request를 JSP로 전송 => InternalResourceViewResolver
		                         => 확장자 / 경로명
		6. JSP에서 (JSTL,EL을 이용해서 전송받은 request를 출력)
	 -->
	<!-- 스프링에서 JSP를 찾을 수 있게 등록(ViewResolver) -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/"
		p:suffix=".jsp"
	/>
</beans>
